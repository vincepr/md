"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[9667],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,g=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2953:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={},i="Gotchas",l={unversionedId:"go/04gotchas",id:"go/04gotchas",title:"Gotchas",description:"Just a few notes, where go didnt behave as expcted.",source:"@site/docs/go/04gotchas.md",sourceDirName:"go",slug:"/go/04gotchas",permalink:"/md/go/04gotchas",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/go/04gotchas.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Timeout - Context package",permalink:"/md/go/03examples/timeoutFetch"},next:{title:"Some Notes while starting to learn Rust",permalink:"/md/rust/02start"}},s={},c=[{value:"variable shadowing",id:"variable-shadowing",level:3},{value:"panicking maps",id:"panicking-maps",level:3},{value:"pointers",id:"pointers",level:3},{value:"Zero Values in enums",id:"zero-values-in-enums",level:3}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gotchas"},"Gotchas"),(0,a.kt)("p",null,"Just a few notes, where go didnt behave as expcted."),(0,a.kt)("h3",{id:"variable-shadowing"},"variable shadowing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func shadow(){\n    x := 99\n    fmt.Println(x)\n\n    if true {\n        fmt.Println(x)\n        x := 2\n        fmt.Println(x)\n    }\n    fmt.Println(x)\n\n    if true {\n        fmt.Println(x)\n        x = 23\n        fmt.Println(x)\n    }\n    fmt.Println(x)\n}\n// 99 99 2 99 99 23 23\n")),(0,a.kt)("h3",{id:"panicking-maps"},"panicking maps"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'var x map[string]bool\n\nx["isHome"]=true    //panics\n\ny :=make(map[string]bool)\ny["isHome"]=true    //works\n\nz :=map[string]bool{}\nz["isHome"]=true    //should also work\n')),(0,a.kt)("h3",{id:"pointers"},"pointers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"func one(a *int){\n    x := 101\n    a = &x\n}\nfunc two(a *int){\n    x := 99\n    *a=x\n}\nfunc tre(a int){\n    x :=12\n    a=x\n}\n\ni :=100\nfmt.Print(i)\n\none(&i)\nfmt.Print(i)\n\ntwo(&i)\nfmt.Print(i)\n\ntre(i)\nfmt.Print(i)\n\n// 100 100 99 99\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"one: in go a is a copy and does NOT allow changing the pointer,"),(0,a.kt)("li",{parentName:"ul"},"two: BUT go only allows for the pointer to point at new memory."),(0,a.kt)("li",{parentName:"ul"},"tre: new value of a stays in the scope of the block (angled-brackets:{})")),(0,a.kt)("h3",{id:"zero-values-in-enums"},"Zero Values in enums"),(0,a.kt)("p",null,"Do NOT use Zero values in enums. This might lead to unexpected behaviors down the line, especially when including databases, json etc. where a undefined might be a 0."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"// BAD:\nconst(\n    Summer int  = 0\n    Autumn      = 1\n    Winter      = 2\n    Spring      = 3\n)\n\n// Instead do it like this:\nconst(\n    Unknown int = 0\n    Summer      = 1\n    Autumn      = 2\n    Winter      = 3\n    Spring      = 4\n)\n")))}p.isMDXComponent=!0}}]);