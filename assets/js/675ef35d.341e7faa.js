"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[3],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),m=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=m(r),d=a,g=s["".concat(c,".").concat(d)]||s[d]||p[d]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1845:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var n=r(7462),a=(r(7294),r(3905));const o={},i="Git",l={unversionedId:"tools/git",id:"tools/git",title:"Git",description:"basics",source:"@site/docs/tools/git.md",sourceDirName:"tools",slug:"/tools/git",permalink:"/md/tools/git",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/tools/git.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"general tools",permalink:"/md/tools/general"},next:{title:"Makefiles - mostly for c",permalink:"/md/tools/makefile"}},c={},m=[{value:"basics",id:"basics",level:2},{value:"feature branch workflow",id:"feature-branch-workflow",level:2}],u={toc:m};function s(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"git"},"Git"),(0,a.kt)("h2",{id:"basics"},"basics"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"some settings")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git config credential.helper store\ngit config --global credential.helper 'cache --timeout=3600'\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"fresh repository:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'mkdir minsk\ncd minsk\ngit add .\ngit int\ngit commit -m "initial commit"\ngit remote add origin https://github.com/vincepr/minsk.git\ngit push -u origin master\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"commit all modified files (but NOT new unstaged ones)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'git commit -am "added things"\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"commit everything")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'git add --all && git commit -m "comment"\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"create a custom alias to quickly add -A and commit:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git config --global alias.coa '!git add -A && git commit -m'\ngit coa \"some message\"\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"change branches")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git branch              // show branches & active branch\ngit branch master       // make master branch active\n")),(0,a.kt)("h2",{id:"feature-branch-workflow"},"feature branch workflow"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"update main to latest version")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git checkout main\ngit fetch origin\ngit reset --hard origin/main\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"create a new branch")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git checkout -b new-features-branchname\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"update add and comit changes like usual to the featurebranch")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'git status\ngit commit -am "added files and updates"\n')),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"push feature branch to remote")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git push -u origin new-features-branchname\n")))}s.isMDXComponent=!0}}]);