"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[471],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,y=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(y,c(c({ref:t},u),{},{components:n})):r.createElement(y,c({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:a,c[1]=s;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7242:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},c="Deconstruction in Csharp",s={unversionedId:"csharp/examples/Deconstruction",id:"csharp/examples/Deconstruction",title:"Deconstruction in Csharp",description:"Short syntax to get values out of Touples as expected.",source:"@site/docs/csharp/examples/Deconstruction.md",sourceDirName:"csharp/examples",slug:"/csharp/examples/Deconstruction",permalink:"/md/csharp/examples/Deconstruction",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/csharp/examples/Deconstruction.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CancellationToken in Csharp",permalink:"/md/csharp/examples/CancellationToken"},next:{title:"Delegates in Csharp",permalink:"/md/csharp/examples/Delegate"}},i={},l=[],u={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deconstruction-in-csharp"},"Deconstruction in Csharp"),(0,a.kt)("p",null,"Short syntax to get values out of Touples as expected."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Deconstruct")," named function to enable custom deconstructing syntax."),(0,a.kt)("li",{parentName:"ul"},"Records implement Deconstructing by default."),(0,a.kt)("li",{parentName:"ul"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'var james = new Person{\n    Name = "James",\n    Surname = "Bond",\n    DateOfBirth = new DateOnly(1959, 2, 22),\n};\n\nvar (name, _, birthday) = james;\n\n\npublic class Person{\n    public string Name { get; init; } = default!;\n    public DateOnly DateOfBirth { get; init; }\n\n    // Custom deconstructor for our Person class\n    public void Deconstruct(out string name, out string surname, out DateOnly birthday)\n    {\n        name = Name;\n        surname = Surname;\n        birthday = DateOfBirth;\n    }\n}\n')),(0,a.kt)("p",null,"It is even possible to write extension Method Deconstruct for Dotnet Core Implementations like DateOnly:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"var date = new DateOnly(1959, 2, 22);\nvar (y, m, d) = date;\n\nvar (year, month, date) = new DateOnly(1999, 9, 9);\n\n\npublic static class DeconstructionExtensions{\n    // Deconstructs externally on this DateOnly instance.\n    public static void Deconstruct(this DateOnly dateonly, \n        out int year, out int month, out int day)\n    {\n        year = dateonly.Year;\n        month = dateonly.Month;\n        day = dateonly.Day;\n    }\n}\n")))}p.isMDXComponent=!0}}]);