"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[696],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,u=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=l(n),m=i,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||u;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var u=n.length,a=new Array(u);a[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,a[1]=o;for(var l=2;l<u;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9250:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>u,metadata:()=>o,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const u={},a="Queue in Csharp",o={unversionedId:"datastructures/queue",id:"datastructures/queue",title:"Queue in Csharp",description:"Implementation",source:"@site/docs/datastructures/queue.md",sourceDirName:"datastructures",slug:"/datastructures/queue",permalink:"/md/datastructures/queue",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/datastructures/queue.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Priority Queue - (often implemented with a Heap)",permalink:"/md/datastructures/priority_queue"},next:{title:"Basic Stack implementation in Csharp",permalink:"/md/datastructures/stack"}},s={},l=[{value:"Implementation",id:"implementation",level:2}],c={toc:l};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"queue-in-csharp"},"Queue in Csharp"),(0,i.kt)("h2",{id:"implementation"},"Implementation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'public static class Example\n{\n    public static void Run() \n    {\n        Console.WriteLine("--- Queue Example: ---");\n        var list = new QueueUsingLinkedList<string>();\n        list.Add("Hello");\n        list.Add("World");\n        list.Add("how\'s");\n        list.Add("it");\n        list.Add("going?");\n        Console.WriteLine(list);\n\n        Console.WriteLine(list.Remove());\n            \n        foreach(var node in list) Console.WriteLine(node);\n    }\n}\n    \n/// Queue implementation, First in First Out based on the Default Linked List.\npublic sealed class QueueUsingLinkedList<T> :IEnumerable<T> where T : IComparable<T>\n{\n    private LinkedList<T> list = new LinkedList<T>();\n        \n    public int Length => list.Count;\n\n    public bool IsEmpty() => list.Count == 0;\n\n    public T? PeekFirst() => list.First is null ? default(T) : list.First.Value;    // the default(T) should never get reached\n\n    public T? PeekLast() => list.Last is null ? default(T) : list.Last.Value;\n\n    /// Enqueue - Adds at the End of the Queue\n    public void Add(T value) => list.AddLast(value);\n\n    /// Dequeue - Removes from the Top of the Queue\n    public T? Remove() {\n        if (this.IsEmpty()) throw new InvalidOperationException("Cant Remove from empty Queue");\n        var result = PeekFirst();\n        list.RemoveFirst();\n        return result;\n    }\n\n    public override string ToString() {\n        return "[Queue: out< " + string.Join(", ", this) +" <in]";\n    }\n\n    public IEnumerator<T> GetEnumerator() => list.GetEnumerator();\n\n    IEnumerator IEnumerable.GetEnumerator() => list.GetEnumerator();\n}\n')))}p.isMDXComponent=!0}}]);