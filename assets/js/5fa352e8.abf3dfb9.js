"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[411],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>k});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),u=a,k=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return t?n.createElement(k,s(s({ref:r},p),{},{components:t})):n.createElement(k,s({ref:r},p))}));function k(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[m]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},582:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={},s="Docker with mssql server",l={unversionedId:"csharp/sql/docker",id:"csharp/sql/docker",title:"Docker with mssql server",description:"- docker images from https://hub.docker.com/_/microsoft-mssql-server",source:"@site/docs/csharp/sql/docker.md",sourceDirName:"csharp/sql",slug:"/csharp/sql/docker",permalink:"/md/csharp/sql/docker",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/csharp/sql/docker.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MinimalAPI example project in csharp",permalink:"/md/csharp/examples/minimal_api"},next:{title:"PostgreSQL with donet",permalink:"/md/csharp/sql/postgre"}},i={},c=[{value:"Microsoft Server Management Studio",id:"microsoft-server-management-studio",level:2},{value:"adding the backup data to our dockercontainer",id:"adding-the-backup-data-to-our-dockercontainer",level:2}],p={toc:c};function m(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"docker-with-mssql-server"},"Docker with mssql server"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"docker images from ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/microsoft-mssql-server"},"https://hub.docker.com/_/microsoft-mssql-server"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"adventurework db samples (Lightweight 2022.bak) from: ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/sql/samples/adventureworks-install-configure?view=sql-server-ver16&tabs=ssms"},"https://learn.microsoft.com/en-us/sql/samples/adventureworks-install-configure?view=sql-server-ver16&tabs=ssms"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"docker compose up -d")," with:"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3.8\'\nservices:\n  sqlserver:\n    image: "mcr.microsoft.com/mssql/server:2022-latest"\n    environment:\n      ACCEPT_EULA: "Y"\n      MSSQL_SA_PASSWORD: "pa55word!"\n      #MSSQL_PID: "Express"\n    ports:\n      - "1433:1433"\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"or just ",(0,a.kt)("inlineCode",{parentName:"li"},'docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=pa55word!" -p 5555:1433 -d mcr.microsoft.com/mssql/server:2022-latest -d'))),(0,a.kt)("h2",{id:"microsoft-server-management-studio"},"Microsoft Server Management Studio"),(0,a.kt)("p",null,"using Server Management Studio (SSMS) to check into the db quickly"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Server type Database Engine"),(0,a.kt)("li",{parentName:"ul"},"we can either use the ip ",(0,a.kt)("inlineCode",{parentName:"li"},"127.0.0.1")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"localhost,5555")," as Servername"),(0,a.kt)("li",{parentName:"ul"},"Authentification SQL Server Authentification with user: ",(0,a.kt)("inlineCode",{parentName:"li"},"sa")," and pw: ",(0,a.kt)("inlineCode",{parentName:"li"},"pa55word"))),(0,a.kt)("h2",{id:"adding-the-backup-data-to-our-dockercontainer"},"adding the backup data to our dockercontainer"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"we run ",(0,a.kt)("inlineCode",{parentName:"p"},"RESTORE FILELISTONLY FROM DISK = 'C:\\Users\\vince\\source\\repos\\cs_sql_tests\\AdventureWorksLT2022.bak'")," against a sql server. To get the Logical Names for the following MOVE commands.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"restore-backup.sql")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"RESTORE DATABASE [AdventureWorks] FROM DISK = '/tmp/AdventureWorksLT2022.bak'\nWITH FILE = 1,\nMOVE 'AdventureWorksLT2022_Data' TO '/var/opt/mssql/data/AdventureWorks.mdf'\nMOVE 'AdventureWorksLT2022_Log' TO '/var/opt/mssql/data/AdventureWorks.ldf'\nNOUNLOAD, REPLACE, STATS = 5\nGO\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dockerfile"),"      Note DOCKERFILE did not work in windows while dockerfile lowercase did")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-DOCKERFILE"},"## build step to fill with our data from file\nFROM mcr.microsoft.com/mssql/server:2022-latest AS build\nENV ACCEPT_EULA=Y\nENV MSSQL_SA_PASSWORD=pa55word!\n\nWORKDIR /tmp\nCOPY AdventureWorksLT2022.bak .\nCOPY restore-backup.sql .\n\nRUN /opt/mssql/bin/sqlservr --accept-eula & sleep 10 \\\n    && /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P \"pa55word!\" -i /tmp/restore-backup.sql \\\n    && pkill sqlservr\n\n## copy our created data to the persistant db\n#   this removes the backup files\n#   this also removes any traces of the 'pa55word!' in the bash history/ENV etc.\nFROM mcr.microsoft.com/mssql/server:2022-latest AS release\nENV ACCEPT_EULA=Y\n\nCOPY --from=build /var/opt/mssql/data /var/opt/mssql/data\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"docker build -t restored-db .")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"docker run -p 1433:1433 -d restored-db"))))}m.isMDXComponent=!0}}]);