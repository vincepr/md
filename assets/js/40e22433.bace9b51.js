"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[5549],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(n),m=s,v=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(v,o(o({ref:t},p),{},{components:n})):r.createElement(v,o({ref:t},p))}));function v(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,o=new Array(i);o[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[d]="string"==typeof e?e:s,o[1]=a;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=n(7462),s=(n(7294),n(3905));const i={},o="nginx",a={unversionedId:"settings/nginx",id:"settings/nginx",title:"nginx",description:"List of nginx, socat, systemd configs",source:"@site/docs/settings/nginx.md",sourceDirName:"settings",slug:"/settings/nginx",permalink:"/md/settings/nginx",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/settings/nginx.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Handling errors",permalink:"/md/rust/06errors"},next:{title:"tunnel",permalink:"/md/settings/tunnel"}},l={},c=[{value:"openvscode systemd",id:"openvscode-systemd",level:2},{value:"openvscode SSH / TLS certificate with letsencrypt",id:"openvscode-ssh--tls-certificate-with-letsencrypt",level:2},{value:"dirty basic-http login",id:"dirty-basic-http-login",level:2},{value:"testing",id:"testing",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"nginx"},"nginx"),(0,s.kt)("p",null,"List of nginx, socat, systemd configs "),(0,s.kt)("h2",{id:"openvscode-systemd"},"openvscode systemd"),(0,s.kt)("p",null,"Create file in ONE of those paths:\n",(0,s.kt)("inlineCode",{parentName:"p"},"sudo nano /usr/lib/systemd/system/openvscode-server.service"),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"sudo nano /etc/systemd/system/openvscode-server.service")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"sudo systemctl daemon-reload"),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"sudo systemctl start code-server"),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"sudo systemctl enable code-server")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"server.service                                                                               \n[Unit]\nDescription=openvscode-server\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/home/code/ovs/bin/openvscode-server --host 0.0.0.0 --port 3001 --without-connection-token --accept-server-license-terms\nRestart=always\nUser=code\n\n[Install]\nWantedBy=multi-user.target\n")),(0,s.kt)("h2",{id:"openvscode-ssh--tls-certificate-with-letsencrypt"},"openvscode SSH / TLS certificate with letsencrypt"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt install certbot python3-certbot-nginx\n")),(0,s.kt)("h2",{id:"dirty-basic-http-login"},"dirty basic-http login"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'server {\n    auth_basic      "Login Only Area";\n    auth_basic_user_file /etc/apache2/.htpasswd;\n\n    root /var/www/terminal.vprobst.de/html;\n    index index.html index.htm index.nginx-debian.html;\n\n    server_name terminal.vprobst.de www.terminal.vprobst.de;\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\nserver {\n    listen 80;\n    listen [::]:80;\n    server_name terminal.vprobst.de www.terminal.vprobst.de;\n}\n')),(0,s.kt)("h2",{id:"testing"},"testing"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"sudo nano /etc/nginx/sites-available/auth.vincepr.de.conf")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"server {\n        listen 80;\n        listen [::]:80;\n\n        server_name auth.vprobst.de;\n\n        location / {            \n                proxy_pass http://localhost:3002/;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection upgrade;\n                proxy_set_header Accept-Encoding gzip;  \n\n        }\n}\n")),(0,s.kt)("p",null,"sudo ln -s /etc/nginx/sites-available/auth.vprobst.de.conf /etc/nginx/sites-enabled/auth.vprobst.de.conf"),(0,s.kt)("p",null,"sudo nginx -t"),(0,s.kt)("p",null,"systemctl status nginx\nsudo systemctl restart nginx"))}d.isMDXComponent=!0}}]);