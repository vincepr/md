"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[3227],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),c=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(m.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,m=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,g=u["".concat(m,".").concat(d)]||u[d]||p[d]||l;return t?r.createElement(g,i(i({ref:n},s),{},{components:t})):r.createElement(g,i({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var m in n)hasOwnProperty.call(n,m)&&(o[m]=n[m]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9177:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const l={},i="gleitkommazahlen, Float etc als datentyp",o={unversionedId:"fiae/Programmierung/Grundlagen/Float",id:"fiae/Programmierung/Grundlagen/Float",title:"gleitkommazahlen, Float etc als datentyp",description:"allgemein nachkommastellen im bin\xe4rsystem",source:"@site/docs/fiae/Programmierung/Grundlagen/Float.md",sourceDirName:"fiae/Programmierung/Grundlagen",slug:"/fiae/Programmierung/Grundlagen/Float",permalink:"/md/fiae/Programmierung/Grundlagen/Float",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/fiae/Programmierung/Grundlagen/Float.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Grundlagen der Programmierung",permalink:"/md/fiae/Programmierung/Grundlagen/"},next:{title:"Werkzeuge der Softwareentwicklung",permalink:"/md/fiae/Programmierung/Grundlagen/Softwareentwicklung"}},m={},c=[{value:"allgemein nachkommastellen im bin\xe4rsystem",id:"allgemein-nachkommastellen-im-bin\xe4rsystem",level:2},{value:"decimal",id:"decimal",level:2},{value:"float",id:"float",level:2}],s={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gleitkommazahlen-float-etc-als-datentyp"},"gleitkommazahlen, Float etc als datentyp"),(0,a.kt)("h2",{id:"allgemein-nachkommastellen-im-bin\xe4rsystem"},"allgemein nachkommastellen im bin\xe4rsystem"),(0,a.kt)("p",null,"bsp 13.25 als float berechnen"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"13  :2  =6  R1\n6   :2  =0  R0\n3   :2  =1  R1\n1   :2  =0  R1\n0.25*2  =0  .5  (1 stelle entspricht bin\xe4r, kommawert neuer \xfcbertrag)\n0.5 *2  =1  .0\n0   *2  =0  .0\n0   *2  =0  .0\n...\n\n-> 1101.0100\n")),(0,a.kt)("p",null,"bsp 13.4 kann nur ann\xe4herungsweise dargestellt werden, da sie sich (im bin\xe4rsystem) periodisch wiederholt"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"0.4 *2  =0.8\n0.8 *2  =1.6\n0.6 *2  =1.2\n0.2 *2  =0.4\n0.4 *2  =0.8\n... widerholt sich periodisch\n-> 1101.011001100110011..\n")),(0,a.kt)("h2",{id:"decimal"},"decimal"),(0,a.kt)("p",null,"ex: ",(0,a.kt)("inlineCode",{parentName:"p"},"decimal(6,2) <- 3Byte")," Mit 1 halfbyte pro nachkommastelle im decimalsystem (so lassen sich diese genau darstellen, z.B. f\xfcr W\xe4hrungssysteme)"),(0,a.kt)("h2",{id:"float"},"float"),(0,a.kt)("p",null,"Float 4 Byte 32Bit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"1Bit        8Bit        23Bit\nVorzeichen  Exponent    Mantisse\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Exponent gibt an wo das kommaziechen "einger\xfcckt wird". oder der positive exponent liegt.0',(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Bias 127 ist der mittelwert. Kleiner als dieser -> komma einr\xfccken, gr\xf6\xdfer-> positiver exponent e hoch...")))))}u.isMDXComponent=!0}}]);