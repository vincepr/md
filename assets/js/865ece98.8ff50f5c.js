"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[3139],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(k,o(o({ref:t},p),{},{components:r})):n.createElement(k,o({ref:t},p))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7139:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={},o="Rest Api with dotnet core",s={unversionedId:"csharp/microservices/rest_api",id:"csharp/microservices/rest_api",title:"Rest Api with dotnet core",description:"add libraries",source:"@site/docs/csharp/microservices/rest_api.md",sourceDirName:"csharp/microservices",slug:"/csharp/microservices/rest_api",permalink:"/md/csharp/microservices/rest_api",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/csharp/microservices/rest_api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MinimalAPI example project in csharp",permalink:"/md/csharp/microservices/minimal_api"},next:{title:"Dapper",permalink:"/md/csharp/sql_docker/dapper"}},l={},c=[{value:"add libraries",id:"add-libraries",level:2},{value:"Rest consists of the following entities:",id:"rest-consists-of-the-following-entities",level:2},{value:"JWT Token - JSON Web Token",id:"jwt-token---json-web-token",level:3},{value:"JWT - workflow",id:"jwt---workflow",level:4}],p={toc:c};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rest-api-with-dotnet-core"},"Rest Api with dotnet core"),(0,a.kt)("h2",{id:"add-libraries"},"add libraries"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dotnet add package Microsoft.EntityFrameworkCore\ndotnet add package Microsoft.EntityFrameworkCore.SqlServer\ndotnet add package Microsoft.AspNetCore.Authentication.jwtBearer\n")),(0,a.kt)("h2",{id:"rest-consists-of-the-following-entities"},"Rest consists of the following entities:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Resource:")," uniquely identifiable entities. Like data from a db, images etc..."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Endpoint:")," ressource that can be accessed trough a url"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"HTTP method:")," HTTP-method is the type of request a client sends to a sever. (GET, PUT, POST, DELETE)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"HTTP header:")," key-value pair used to share additional information between client and sever like:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type of data beeing sent. (JSON, XML)"),(0,a.kt)("li",{parentName:"ul"},"Type of encription supported."),(0,a.kt)("li",{parentName:"ul"},"Authentication token."),(0,a.kt)("li",{parentName:"ul"},"Additional Customer data based on application need. ")),(0,a.kt)("h3",{id:"jwt-token---json-web-token"},"JWT Token - JSON Web Token"),(0,a.kt)("p",null,"Bearer token to secure the REST-Api. Open standard for transferring data securely between two entities (where auth is required)"),(0,a.kt)("p",null,"A JWT is digitally signed using a secret by the token provider (api or auth-sever). "),(0,a.kt)("p",null,"JWT consists of the following parts:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Header:")," encoded data of token type and algorithm used to sign the data"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Payload:")," encoded data of claims intended for share. (ex: Admin=true, claimedUsername=BobRoss, time_till_token_expires=31.1.2023/11:39...)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Signature:"),": created by signing using a secret key."),(0,a.kt)("h4",{id:"jwt---workflow"},"JWT - workflow"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Client requesting token:")," Client sends a request to auth-server with necessary information to prove its identity. (ex. username and pw)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Token creation:")," auth-server receives the token request and verifies the identity. If valid a token will be created with the necessary claims encoded into it and sent back."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Client sends token to resource server:")," for each request to the resource-Api-server the client needs to include that token in the header."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Resource server verifies the token:")," (this can happen directly in the api-server or that server sends back a request to check the claims to the auth-server)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Read the token from the header."),(0,a.kt)("li",{parentName:"ul"},"Split the Header, Payload and Signature from the token."),(0,a.kt)("li",{parentName:"ul"},"Create signature of received header and payload using the same secret key used when creating the token."),(0,a.kt)("li",{parentName:"ul"},"check wether both the created signature and the signature received in the request are valid."),(0,a.kt)("li",{parentName:"ul"},"if signatures are the same, tokens are valid and provide access tot he requested resource. So an StatusOk Response with the payload can be sent back."),(0,a.kt)("li",{parentName:"ul"},"if signatures are different and unauthorized response will be sent back.")))))}d.isMDXComponent=!0}}]);