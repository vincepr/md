"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[2134],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),f=a,b=m["".concat(s,".").concat(f)]||m[f]||p[f]||i;return t?r.createElement(b,o(o({ref:n},u),{},{components:t})):r.createElement(b,o({ref:n},u))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7361:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={},o="Abstract Class - Interface",l={unversionedId:"fiae/Programmierung/CSharp/examples/abstractC_interface",id:"fiae/Programmierung/CSharp/examples/abstractC_interface",title:"Abstract Class - Interface",description:"- Klassen.cs",source:"@site/docs/fiae/Programmierung/CSharp/examples/abstractC_interface.md",sourceDirName:"fiae/Programmierung/CSharp/examples",slug:"/fiae/Programmierung/CSharp/examples/abstractC_interface",permalink:"/md/fiae/Programmierung/CSharp/examples/abstractC_interface",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/fiae/Programmierung/CSharp/examples/abstractC_interface.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Beispiel Vererbung",permalink:"/md/fiae/Programmierung/CSharp/examples/BeispielVererbung"},next:{title:"File stream in C",permalink:"/md/fiae/Programmierung/CSharp/examples/file"}},s={},c=[],u={toc:c};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"abstract-class---interface"},"Abstract Class - Interface"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Klassen.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'//internal abstract class Form\n//{\n//    public abstract double Flaeche { get;  }\n//    public abstract double Umfang { get;  }\n//}\n\ninternal interface Form{\n    double Flaeche{ get; }\n    double Umfang { get; }\n}\n\ninternal class Kreis : Form{\n    public double Radius { get; set; }\n    public Kreis(double radius) { \n        this.Radius = radius; \n    }\n    public double Flaeche => Math.PI * Radius;\n    public double Umfang  => Math.PI * Radius * Radius;\n}\n\ninternal class Rechteck : Form{\n    public double Laenge { get; set; }\n    public double Hoehe { get; set; }\n    public Rechteck(double width, double height){\n        Laenge = width;\n        Hoehe = height;\n    }\n    public double Flaeche  => Laenge * Hoehe;\n    public double Umfang   => 2 * Laenge + 2 * Hoehe;\n}\n\ninternal class Tabelle{\n    private List<Form> tab;\n\n    public double GesamtUmfang(){\n        double sum = 0;\n        foreach (Form f in tab)\n            sum += f.Umfang;\n        return sum;\n    }\n\n    public double GesamtFlaeche(){\n        double sum = 0;\n        foreach (Form f in tab)\n            sum += f.Flaeche;\n        return sum;\n    }\n\n    public Tabelle(params Form[] forms){\n        Console.WriteLine(forms.Length);\n        tab = new List<Form>();\n        foreach(Form form in forms)\n            tab.Add(form);\n    }\n\n    public string Print()\n    {\n        string str = "|Typ\\t|Radius\\t|Laenge\\t|Breite\\t|Umfang\\t|Fl\xe4che\\t|\\n";\n        foreach (Form form in tab){\n            // checking for types\n            if (form is Rechteck){\n                Rechteck cast = form as Rechteck;\n                str += $"|Eck\\t| \\t|{cast.Laenge}\\t|{cast.Hoehe}\\t|";\n\n            } else if (form is Kreis){\n                Kreis cast = form as Kreis;\n                str += $"|Kreis\\t|{cast.Radius} \\t| \\t| \\t|";\n            }\n            double umfang = Math.Round(form.Umfang,2);\n            double flache = Math.Round(form.Flaeche,2);\n            str += $"{umfang}\\t|{flache}\\t|\\n";\n        }\n        return str;\n    }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Programm.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'internal class Program\n    {\n        static void Main(string[] args)\n        {\n            Tabelle tab = new Tabelle(\n                new Kreis(5.25), \n                new Rechteck(10, 5.6), \n                new Kreis(3.75),\n                new Rechteck(25.45, 10.34)\n            );\n            Console.Write(tab.Print());\n            Console.WriteLine("\\nGesamt Flaeche: " + Math.Round(tab.GesamtFlaeche()), 2);\n            Console.WriteLine("Gesamt Umfang: " + Math.Round(tab.GesamtUmfang(), 2));\n        }\n    }\n')))}m.isMDXComponent=!0}}]);