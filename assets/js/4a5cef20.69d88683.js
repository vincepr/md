"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[5766],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(n),m=o,h=s["".concat(c,".").concat(m)]||s[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5886:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},i="Dev and Production Container for a go project",l={unversionedId:"webdev/docker/01basics",id:"webdev/docker/01basics",title:"Dev and Production Container for a go project",description:"setup",source:"@site/docs/webdev/docker/01basics.md",sourceDirName:"webdev/docker",slug:"/webdev/docker/01basics",permalink:"/md/webdev/docker/01basics",draft:!1,editUrl:"https://github.com/vincepr/md/blob/main/docs/webdev/docker/01basics.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Design Patterns",permalink:"/md/webdev/designpatterns"},next:{title:"Minimal docker images from scratch",permalink:"/md/webdev/docker/02scrath"}},c={},p=[{value:"setup",id:"setup",level:2},{value:"creating the dockerfile (for production)",id:"creating-the-dockerfile-for-production",level:2},{value:"building the image",id:"building-the-image",level:2},{value:"running the container",id:"running-the-container",level:2},{value:"setup",id:"setup-1",level:2},{value:"creating the dockerfile",id:"creating-the-dockerfile",level:2},{value:"CI/CD",id:"cicd",level:2},{value:"check this for a good entrypoint (especially for Ci/Cd)",id:"check-this-for-a-good-entrypoint-especially-for-cicd",level:2}],d={toc:p};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dev-and-production-container-for-a-go-project"},"Dev and Production Container for a go project"),(0,o.kt)("h1",{id:"dev-docker-container"},"Dev Docker container"),(0,o.kt)("h2",{id:"setup"},"setup"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mkdir src\ncd src\nexport GOFLAGS=-mod=vendor\nexport GO111MODULE=on\ngo mod init github.com/vincepr/go-web-docker \n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"now we can use the following to download required ependencies in the /vendor/ folder instead of GOROOT-path."),(0,o.kt)("li",{parentName:"ul"},"useful since we build them into our dev container")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"go mod tidy\ngo mod download\ngo mod vendor\ngo mod verify\n")),(0,o.kt)("h2",{id:"creating-the-dockerfile-for-production"},"creating the dockerfile (for production)"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Dockerfile")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'# References the base image\nFROM golang:1.20.2-bullseye\n\n# installs bee tool globaly, used to live-reload our code during development\nRUN go install github.com/beego/bee/v2@latest\n\n# Env variables. used to configure the use of our vendor location for the GO modules\nENV GO111MODULE=on\nENV GOFLAGS=-mod=vendor\n\n# creates a folder for the code and make it the active directory\nENV APP_HOME /go/src/mathapp\nRUN mkdir -p "$APP_HOME"\nWORKDIR "$APP_HOME"\n\n# port of our port we work with\nEXPOSE 8010\n#uses the bee comand to start our application\nCMD ["bee", "run"]\n')),(0,o.kt)("h2",{id:"building-the-image"},"building the image"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"sudo docker build -t mathapp-development .")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"-t mathapp")," sets the tag name for the new image, we can reference the image later as ",(0,o.kt)("em",{parentName:"p"},"mathapp:latest"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"to check and list images on the system ",(0,o.kt)("inlineCode",{parentName:"p"},"docker images"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"we added (if not already existed) golang and mathapp images to the list"))),(0,o.kt)("h2",{id:"running-the-container"},"running the container"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"sudo docker run -it --rm -p 8888:8010 -v $PWD/src:/go/src/mathapp mathapp-development")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"docker run")," to run a container"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"-it")," flag to start the container in an interactive mode, tying it to the current shell"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"--rm")," cleans out the container after it shuts down"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"-p 8888:8010")," flag allows the container to be accessed at port 8888 using the 8010 port inside the container"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"-v $PWD/src:/go/src/mathapp")," makes the development files available inside and outside the container. Maping the src/ from the machine to the /go/src/mathapp in the container"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"--name mathapp-instance")," would name the container so"),(0,o.kt)("li",{parentName:"ul"},"last ",(0,o.kt)("strong",{parentName:"li"},"mathapp")," just names the container"),(0,o.kt)("li",{parentName:"ul"},"access our app on: ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:8888/sum/4/5"))),(0,o.kt)("p",null,"to access our app"),(0,o.kt)("h1",{id:"docker-in-production"},"Docker in Production"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"auto build after changes are pushed to the git repo"),(0,o.kt)("li",{parentName:"ul"},"auto run test"),(0,o.kt)("li",{parentName:"ul"},"create docker image if the above is sucessfull only, then push it to Docker Hub")),(0,o.kt)("h2",{id:"setup-1"},"setup"),(0,o.kt)("p",null,"new dockerfile to create a self contained image, without external dependencies."),(0,o.kt)("h2",{id:"creating-the-dockerfile"},"creating the dockerfile"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Dockerfile.production")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'\n# 1st stage of the multistage build - to compile our binary (using semaphoreci instead of normal because of docker rates limites) \n# builder is just our name for the stage\nFROM registry.semaphoreci.com/golang:1.18 as builder\n\n# create the application folder for the app and copies the source code. \nENV APP_HOME /go/src/mathapp\nWORKDIR "$APP_HOME"\nCOPY src/ .\n\n# download modules and build the binary\nRUN go mod download\nRUN go mod verify\nRUN go build -o mathapp\n\n# ----------------------------------------------------- #\n\n# 2nd stage of the multistage build - the final container where we will run the services\nFROM registry.semaphoreci.com/golang:1.18\n\n# create a folder for the code and make it the active directory\nENV APP_HOME /go/src/mathapp\nRUN mkdir -p "$APP_HOME"\nWORKDIR "$APP_HOME"\n\n# copy command to copy files into the image. --from lets copy from the previous "1st stage" named builder.\nCOPY src/conf/ conf/\nCOPY src/views/ views/\nCOPY --from=builder "$APP_HOME" /mathapp $APP_HOME\n\n# what to look at and run app\nEXPOSE 8010\nCMD ["./mathapp"]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"build the deployment image: ",(0,o.kt)("inlineCode",{parentName:"li"},"sudo docker build -t mathapp-production -f Dockerfile.production .")),(0,o.kt)("li",{parentName:"ul"},"run it: ",(0,o.kt)("inlineCode",{parentName:"li"},"sudo docker build run -it -p 8888:8010 mathapp-production")),(0,o.kt)("li",{parentName:"ul"},"check mem/cpu usage with ",(0,o.kt)("inlineCode",{parentName:"li"},"sudo docker stats"))),(0,o.kt)("h1",{id:"continous-integration-with-semaphore"},"Continous Integration (with Semaphore)"),(0,o.kt)("h2",{id:"cicd"},"CI/CD"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Continous Integration CI and Continous Delivery CD"),(0,o.kt)("li",{parentName:"ul"},"Developers merge their changes to the main code branch many times per day (like Github-Actions automation)"),(0,o.kt)("li",{parentName:"ul"},"Each code merge triggers an automated build and test sequence"),(0,o.kt)("li",{parentName:"ul"},"Automated Testing neccessary to check that code is save to deploy")),(0,o.kt)("h2",{id:"check-this-for-a-good-entrypoint-especially-for-cicd"},"check this for a good entrypoint (especially for Ci/Cd)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://semaphoreci.com/community/tutorials/how-to-deploy-a-go-web-application-with-docker"},"https://semaphoreci.com/community/tutorials/how-to-deploy-a-go-web-application-with-docker")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.semaphoreci.com/examples/golang-continuous-integration/"},"https://docs.semaphoreci.com/examples/golang-continuous-integration/")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.semaphoreci.com/programming-languages/go/"},"https://docs.semaphoreci.com/programming-languages/go/"))))}s.isMDXComponent=!0}}]);